# YAML

# Define the console(s) used to control the system.  There can be more than one; obviously each console would need
# to be on a different I2C address.  Multiple consoles have not be tested.
consoles: [
    {
    type: LCDConsole,
    I2C_driver: I2CLCD          # I2C_driver. Currently supported: I2CLCD or I2CBV4618
    I2C_address: 0x63           # NOT SUPPORTED YET.
    keypad: 1                   # 1:True, 0:False
    keypad_polling_period: 100  # Period at which the keypad is polled. (in mSec)
    lcd_backlight_timer: 25     # lcd_backlight_timer. Delay in sec before the backlight is turned off.  0 to disable (always on).
    }
]

# arming grace delay. Delay in seconds.
arming grace delay: 60
# disarming grace delay. Delay in seconds.
disarming grace delay: 30

# (!Not implemented yet!)
# delay (in minute) during which the fire detectors will be ignored by the system. "Hush" feature.
# This feature is enabled by entering the PIN when in StateFire or by using the function.
fire_hush_delay: 10

# pin. Code sequence to arm/de-arm the system. Number of digits is flexible.
pin: "1234"
# guest_pin.  Same as pin but will trigger additional logging & notification
guest_pin: "4321"

# Functions. The digit sequence to call the corresponding function.  The sequence has to be followed by a * to be used.
# Number of digits has to be the same length as the pin or shorter.
# Available functions:
#   partial_arm
#   delayed_partial_arm
#   display_statistics
#   reboot
#   built_in_test
#   detailed_weather

functions:
    "": partial_arm
    "0": delayed_partial_arm
    "9": fire_hush
    "1111": reboot
    "2222": built_in_test
    "3333": detailed_weather

# GPIO numbering system (GPIO.BOARD or GPIO.BCM).
GPIO_numbering_system: "GPIO.BCM"

# sensor_map.  Each set in the map are as follows:
# Pin number (GPIO BCM pin number)
# Sensor Name
# Symbol name.  Symbol name as to match a symbol in lcd_custom_chars. Alternatively, enter only one character to use directly if no symbol exists.  This symbol is used on the LCD.
# Pin mode. PULLUP, PULLDOWN, or FLOATING
# Polling period in millisecond.  The value of the sensor has to be the same 2 readings in a row to be accepted (for debouncing purposes.)
# normally_closed or normally_opened
# Sensor type. type_intrusion or type_fire
# List of states in which the sensor is armed. ANY if the sensor is always armed.
# disarming grace when armed. (0: disable the grace period, 1: default ("disarming grace delay"), or delay in seconds).
# Play a sound what the sensor state changes. (1=play_sound, 0=no_sound)

sensor_map:
    # Set of GPIO Sensors
    Sensor: [
        {
        pin: 22,
        name: "DOOR",
        icon: "door",
        pin_mode: "PULLUP",
        polling_period: 250,
        normally_closed: 1,
        armed_states: ["StatePartiallyArmed","StateArmed"],
        disarming_setting: 1,
        play_sound: 1
        }
        ,
        {
        pin: 17,
        name: "PATIO",
        icon: "patio",
        pin_mode: "PULLUP",
        polling_period: 250,
        normally_closed: 1,
        armed_states: ["StatePartiallyArmed","StateArmed"],
        disarming_setting: 1,
        play_sound: 1
        }
        ,
        {
        pin: 23,
        name: "Motion1",
        icon: "camera",
        pin_mode: "FLOATING",
        polling_period: 300,
        normally_closed: 1,
        armed_states: ["StateArmed"],
        disarming_setting: 0,
        play_sound: 0
        }
        ,
        {
        pin: 4,
        name: "GARAGE",
        icon: "door",
        pin_mode: "PULLUP",
        polling_period: 300,
        normally_closed: 1,
        armed_states: ["StatePartiallyArmed","StateArmed"],
        disarming_setting: 40,
        play_sound: 1
        }
    ]
    # Set of fire detector sensor
    FireSensor: [
        {
        pin: 24,
        name: "Smoke Detectors",
        icon: "F",
        pin_mode: "PULLUP",
        polling_period: 1000,
        normally_closed: 0,
        play_sound: 0
        }
    ]
    # Set of motion detection Camera using motion
    MotionCamera: [
        {
        name: "Camera 1",
        icon: "camera",
        polling_period: 500,
        armed_states: ["StateArmed"],
        disarming_setting: 0,
        play_sound: 0
        }
    ]

# lcd_custom_chars.
#   index from 1 to 7
#   set of the values that define the actual character
#   character name
#[7,[128,142,144,144,159,155,159,159],"unlock"],
lcd_custom_chars: [
    [1,[159,149,159,149,159,159,159,159],"door"],
    [2,[128,142,145,145,159,155,159,159],"locked"],
    [3,[159,145,145,147,147,145,145,159],"patio"],
    [4,[128,142,149,151,145,142,128,128],"clock"],
    [5,[130,137,133,149,149,133,137,130],"motion"],
    [6,[140,146,146,140,128,128,128,128],"deg"],
    [7,[159,142,132,142,142,142,142,142],"camera"]
]

# output_map.
# Pin number
# Output Name
# normally_closed or normally_opened
# List of states in which the output is active.
# List states from which the sensor has to be triggered. Enter ANY to disregard this feature.
output_map: [
    [7,
        "Siren",
        "normally_low",
        ["StateAlert","StateFire"],
        ["StateArmed","StatePartiallyArmed"]
    ],
    [8,
        "ArmedLED",
        "normally_low",
        ["StateArmed","StatePartiallyArmed"],
        ["ANY"]
    ]
]
wunderground location: enter_your_location_code
wunderground api key: get_your_own_free_wunderground_api_key
google_username: yourgmail@gmail.com
google_password: googlepassword
google_calendar: /calendar/feeds/default/private/full
smtp_server: smtp.server.com
smtp_user: username
smtp_pass: pswd
addr_list: ["mom@gmail.com","dad@gmail.com"]
piezo: disable
speaker: enable
sounds:
    button_wav: sounds/button.wav
    alarm_wav: sounds/siren.wav
    grace_beeps: sounds/grace_beeps.wav
    grace_beeps3: sounds/grace_beeps3.wav
    grace_chirp: sounds/grace_chirp.wav